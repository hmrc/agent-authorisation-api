openapi: 3.0.3

info:
  title: Agent Authorisation
  version: '1.0'
  description: >-

    # Overview

    You can find more information about this API in the [agent-authorisation-api](https://github.com/hmrc/agent-authorisation-api/blob/main/README.md) GitHub repository.

    # Changelog

    You can find the changelog in the [agent-authorisation-api](https://github.com/hmrc/agent-authorisation-api/blob/main/CHANGE_LOG.md) GitHub repository.


servers:
  - url: https://test-api.service.hmrc.gov.uk/
    description: Sandbox
  - url: https://api.service.hmrc.gov.uk/
    description: Production

components:
  parameters:
    arnParameter:
      name: arn
      in: path
      description: The Making Tax Digital (MTD) platform Agent Reference Number. For format and validation of Agent Reference Number [See here](https://github.com/hmrc/agent-mtd-identifiers/blob/main/src/main/scala/uk/gov/hmrc/agentmtdidentifiers/model/Arn.scala)
      required: true
      style: simple
      schema:
        type: string
        example: AARN9999999
    invitationIdParameter:
        name: invitationId
        in: path
        description: A unique authorisation request ID
        required: true
        style: simple
        schema:
          type: string
          example: CS5AK7O8FPC43
    acceptHeader:
      name: Accept
      in: header
      description: >-
        Specifies the response format and the
        [version](/api-documentation/docs/reference-guide#versioning) of the API
        to be used.
      required: true
      schema:
        type: string
        enum: [
            "application/vnd.hmrc.1.0+json"
        ]
    contentTypeHeader:
      name: Content-Type
      in: header
      description: The media type of the request body.
      schema:
        type: string
        enum:
          - application/json
      required: true
    authHeader:
      name: Authorization
      in: header
      description: Bearer [SERVER-TOKEN]
      schema:
        type: string
      required: true
      style: simple
  securitySchemes:
    userRestricted:
      type: oauth2
      description: |
        HMRC supports OAuth 2.0 for authenticating user restricted API requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header.
        See https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/user-restricted-endpoints for details.
      flows:
        authorizationCode:
          authorizationUrl: https://api.service.hmrc.gov.uk/oauth/authorize
          tokenUrl: https://api.service.hmrc.gov.uk/oauth/token
          refreshUrl: https://api.service.hmrc.gov.uk/oauth/refresh
          scopes:
            read:sent-invitations: Grants read access
            read:check-relationship: Grants read access
            write:sent-invitations: Grants write access
            write:cancel-invitations: Grants write access
  responses:
    notFoundInvitation:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            invitationNotFound:
              value:
                code: INVITATION_NOT_FOUND
                message: The authorisation request cannot be found.
    notFoundRelationship:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            relationshipNotFound:
              value:
                code: RELATIONSHIP_NOT_FOUND
                message: Relationship is inactive. Agent is not authorised to act for this client.
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            unauthorizedRequest:
              value:
                code: UNAUTHORIZED
                message: Bearer token is missing or not authorized.
    notAcceptable:
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            acceptHeaderMissing:
              value:
                $ref: './examples/errors/notAcceptable_headerMissing.json'
            acceptHeaderInvalid:
              value:
                $ref: './examples/errors/notAcceptable_headerInvalid.json'
    internalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            internalServerErrorExample:
              value:
                $ref: './examples/errors/internalServerError.json'
    forbiddenDelete:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            notAnAgent:
              value:
                $ref: './examples/errors/forbidden_notAgent.json'
            agentNotSubscribed:
              value:
                $ref: './examples/errors/forbidden_agentNotSubscribed.json'
            noPermissionOnAgency:
              value:
                $ref: './examples/errors/forbidden_noPermissionOnAgency.json'
    forbiddenCreateInvitation:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            clientRegistrationNotFound:
              value:
                $ref: './examples/errors/forbidden_clientRegNotFound.json'
            postcodeNoMatch:
              value:
                $ref: './examples/errors/forbidden_postcodeNoMatch.json'
            vatRegistrationDateNoMatch:
              value:
                $ref: './examples/errors/forbidden_vatRegDateNoMatch.json'
            duplicateAuthorisationRequest:
              value:
               $ref: './examples/errors/forbidden_duplicateAuthReq.json'
            alreadyAuthorised:
              value:
               $ref: './examples/errors/forbidden_alreadyAuthorised.json'
            notAnAgent:
              value:
               $ref: './examples/errors/forbidden_notAgent.json'
            agentNotSubscribed:
              value:
               $ref: './examples/errors/forbidden_agentNotSubscribed.json'
            noPermissionOnAgency:
              value:
               $ref: './examples/errors/forbidden_noPermissionOnAgency.json'
            vatClientInsolvent:
              value:
                $ref: './examples/errors/forbidden_vatClientInsolvent.json'
    forbiddenGetInvitations:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            notAnAgent:
              value:
               $ref: './examples/errors/forbidden_notAgent.json'
            agentNotSubscribed:
              value:
               $ref: './examples/errors/forbidden_agentNotSubscribed.json'
            noPermissionOnAgency:
              value:
               $ref: './examples/errors/forbidden_noPermissionOnAgency.json'
    forbiddenGetRelationshipStatus:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            invalidInvitationStatus:
              value:
               $ref: './examples/errors/forbidden_invalidInvitationStatus.json'
            notAnAgent:
              value:
               $ref: './examples/errors/forbidden_notAgent.json'
            agentNotSubscribed:
              value:
               $ref: './examples/errors/forbidden_agentNotSubscribed.json'
            noPermissionOnAgency:
              value:
               $ref: './examples/errors/forbidden_noPermissionOnAgency.json'
            vatClientInsolvent:
              value:
                $ref: './examples/errors/forbidden_vatClientInsolvent.json'
    badRequestResponses:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            unsupportedVersion:
              value:
               $ref: './examples/errors/badReq_invalidVersionAcceptHeader.json'
            unsupportedContentType:
              value:
               $ref: './examples/errors/badReq_unsupportedContentType.json'
            badRequest:
              value:
               $ref: './examples/errors/badReq.json'
    badRequestCreateInvitation:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            serviceNotSupported:
              value:
                $ref: './examples/errors/badReq_serviceNotSupported.json'
            invalidClientType:
              value:
                $ref: './examples/errors/badReq_clientTypeNotSupported.json'
            invalidClientId:
              value:
                $ref: './examples/errors/badReq_clientIdFormatInvalid.json'
            clientIdDoesNotMatchService:
              value:
                $ref: './examples/errors/badReq_clientIdServiceMatchError.json'
            invalidPostcode:
              value:
                $ref: './examples/errors/badReq_postcodeFormatInvalid.json'
            invalidVatRegistrationDate:
              value:
                $ref: './examples/errors/badReq_vatRegDateFormatInvalid.json'
            unsupportedVersion:
              value:
                $ref: './examples/errors/badReq_invalidVersionAcceptHeader.json'
            unsupportedContentType:
              value:
                $ref: './examples/errors/badReq_unsupportedContentType.json'
            badRequest:
              value:
                $ref: './examples/errors/badReq.json'
    badRequestGetRelationshipStatus:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            serviceNotSupported:
              value:
                $ref: './examples/errors/badReq_serviceNotSupported.json'
            invalidClientId:
              value:
                $ref: './examples/errors/badReq_clientIdFormatInvalid.json'
            clientIdDoesNotMatchService:
              value:
                $ref: './examples/errors/badReq_clientIdServiceMatchError.json'
            invalidPostcode:
              value:
                $ref: './examples/errors/badReq_postcodeFormatInvalid.json'
            invalidVatRegistrationDate:
              value:
                $ref: './examples/errors/badReq_vatRegDateFormatInvalid.json'
            unsupportedVersion:
              value:
                $ref: './examples/errors/badReq_invalidVersionAcceptHeader.json'
            unsupportedContentType:
              value:
                $ref: './examples/errors/badReq_unsupportedContentType.json'
            badRequest:
              value:
                $ref: './examples/errors/badReq.json'
    badRequestGetInvitations:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            unsupportedVersion:
              value:
               $ref: './examples/errors/badReq_invalidVersionAcceptHeader.json'
            unsupportedContentType:
              value:
               $ref: './examples/errors/badReq_unsupportedContentType.json'
            badRequest:
              value:
               $ref: './examples/errors/badReq.json'
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    AgentsInvitationsRequest:
      title: Agent Invitation Request
      required:
        - service
        - clientType
        - clientIdType
        - clientId
        - knownFact
      type: object
      properties:
        service:
          oneOf:
            - $ref: '#/components/schemas/VATService'
            - $ref: '#/components/schemas/ITSAService'
        clientType:
          oneOf:
            - $ref: '#/components/schemas/ClientTypePersonal'
            - $ref: '#/components/schemas/ClientTypeBusiness'
        clientIdType:
          oneOf:
            - $ref: '#/components/schemas/ClientIdTypeNI'
            - $ref: '#/components/schemas/ClientIdTypeVRN'
        clientId:
          oneOf:
            - $ref: '#/components/schemas/ClientIdNINO'
            - $ref: '#/components/schemas/ClientIdVAT'
        knownFact:
          oneOf:
            - $ref: '#/components/schemas/KnownFactPostcode'
            - $ref: '#/components/schemas/KnownFactRegistrationDate'
    ClientIdTypeNI:
      title: ni
      type: string
    ClientIdTypeVRN:
      title: vrn
      type: string
    ClientIdNINO:
      title: National Insurance Number
      type: string
      pattern: ^[ABCEGHJKLMNOPRSTWXYZ][ABCEGHJKLMNPRSTWXYZ]?\d{2}?\d{2}?\d{2}?[A-D]{1}$
    ClientIdVAT:
      title: VAT Registration Number
      type: string
      pattern: ^[0-9]{1,9}$
    KnownFactPostcode:
      title: Postcode
      type: string
      pattern: ^([A-Za-z][A-Za-z]\d\d|[A-Za-z][A-Za-z]\d|[A-Za-z]\d|[A-Za-z]\d\d|[A-Za-z]\d[A-Za-z]|[A-Za-z]{2}\d[A-Za-z]) {0,1}\d[A-Za-z]{2}$
    KnownFactRegistrationDate:
      title: VAT registration date
      type: string
      format: date

    AgentsInvitationsresponse:
      title: AgentsInvitationsresponse
      required:
        - _links
        - service
        - arn
        - created
        - status
      type: object
      properties:
        _links:
          allOf:
            - $ref: '#/components/schemas/Links'
            - description: The link to the invitation
        service:
          maxItems: 1
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ITSAService'
              - $ref: '#/components/schemas/VATService'
          description: The service to which this invitation refers
        arn:
          type: string
          description: The Agent Registration Number for the calling agency
        created:
          type: string
          description: Creation time of the request (RFC3339 / ISO8601 format)
          format: date-time
        updated:
          type: string
          description: Update time of the request (RFC3339 / ISO8601 format)
          format: date-time
        expiresOn:
          type: string
          description: Expiration time of the request (RFC3339 / ISO8601 format)
          format: date
        status:
          type: string
          enum: [
            "Pending",
            "Accepted",
            "Rejected",
            "Cancelled",
            "Deauthorised",
            "Expired",
            "Partialauth"
            ]
          description: The current status of the invitation
        clientActionUrl:
          type: string
          description: Link for the client to authorise/reject this agent's invitation.
          format: uri
    VATService:
      title: MTD-VAT
      type: string
      description: MTD VAT service
    ITSAService:
      title: MTD-IT
      type: string
      description: MTD IT service
    ClientTypePersonal:
      title: personal
      type: string
      description: An individual or sole trader
    ClientTypeBusiness:
      title: business
      type: string
      description: A company or partnership
    Links:
      title: Links
      required:
        - self
      type: object
      properties:
        self:
          allOf:
            - $ref: '#/components/schemas/Self'
      description: A link to the current resource.
    Self:
      title: Self
      required:
        - href
      type: object
      properties:
        href:
          type: string
      description: A link to the current resource.
paths:
  /agents/{arn}/invitations:
    post:
      tags:
      - Agents
      summary: Create a new authorisation
      description: Create a new authorisation request. The request will expire after 21 days.
      operationId: Createanewauthorisation
      security:
        - userRestricted:
          - write:sent-invitations
      parameters:
      - $ref: '#/components/parameters/arnParameter'
      - $ref: '#/components/parameters/acceptHeader'
      - $ref: '#/components/parameters/contentTypeHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsInvitationsRequest'
            examples:
              example-ITSA:
                value:
                  $ref: './examples/post-agency-invitations-example.json'
              example-VAT:
                value:
                  $ref: './examples/post-agency-invitations-vat-example.json'
        required: true
      responses:
        '204':
          description: The request was accepted and an authorisation request has been created
          headers:
            Location:
              description: Location of the authorisation request.
              schema:
                type: string
                example: /agents/AARN9999999/invitations/CS5AK7O8FPC43
        '400':
          $ref: '#/components/responses/badRequestCreateInvitation'
        '401':
          $ref: '#/components/responses/unauthorized'
        '403':
          $ref: '#/components/responses/forbiddenCreateInvitation'
        '406':
          $ref: '#/components/responses/notAcceptable'
        '500':
          $ref: '#/components/responses/internalServerError'
      deprecated: false
    get:
      tags:
      - Agents
      summary: Get all authorisation requests for the last 30 days
      operationId: Getallauthorisationrequestsforthelast30days
      security:
        - userRestricted:
          - read:sent-invitations
      parameters:
      - $ref: '#/components/parameters/arnParameter'
      - $ref: '#/components/parameters/acceptHeader'
      responses:
        '200':
          description: A list of authorisation requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentsInvitationsresponse'
                description: Returns all authorisation requests for the last 30 days.
              examples:
                pending and responded:
                  value:
                   $ref: './examples/get-agency-invitations-example.json'
        '204':
          description: The agent has no authorisation requests in the last 30 days
        '403':
          $ref: '#/components/responses/forbiddenGetInvitations'
        '400':
          $ref: '#/components/responses/badRequestResponses'
        '406':
          $ref: '#/components/responses/notAcceptable'
        '401':
          $ref: '#/components/responses/unauthorized'
        '500':
          $ref: '#/components/responses/internalServerError'
      deprecated: false
  /agents/{arn}/invitations/{invitationId}:
    get:
      tags:
      - Agents
      summary: Get an invitation by id
      operationId: Getaninvitationbyid
      security:
        - userRestricted:
          - read:sent-invitations
      parameters:
      - $ref: '#/components/parameters/arnParameter'
      - $ref: '#/components/parameters/invitationIdParameter'
      - $ref: '#/components/parameters/acceptHeader'
      responses:
        '200':
          description: The authorisation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsInvitationsresponse'
              examples:
                pending:
                  value:
                    $ref: './examples/get-agency-invitation-pending-example.json'
                responded:
                  value:
                    $ref: './examples/get-agency-invitation-responded-example.json'
        '403':
          $ref: '#/components/responses/forbiddenGetInvitations'
        '404':
          $ref: '#/components/responses/notFoundInvitation'
        '400':
          $ref: '#/components/responses/badRequestResponses'
        '406':
          $ref: '#/components/responses/notAcceptable'
        '401':
          $ref: '#/components/responses/unauthorized'
        '500':
          $ref: '#/components/responses/internalServerError'
      deprecated: false
    delete:
      tags:
      - Agents
      summary: Cancel an invitation by id
      operationId: Cancelaninvitationbyid
      security:
        - userRestricted:
          - write:cancel-invitations
      parameters:
      - $ref: '#/components/parameters/arnParameter'
      - $ref: '#/components/parameters/invitationIdParameter'
      - $ref: '#/components/parameters/acceptHeader'
      - $ref: '#/components/parameters/contentTypeHeader'
      responses:
        '204':
          description: The authorisation request has been cancelled
        '403':
          $ref: '#/components/responses/forbiddenDelete'
        '404':
          $ref: '#/components/responses/notFoundInvitation'
        '400':
          $ref: '#/components/responses/badRequestResponses'
        '406':
          $ref: '#/components/responses/notAcceptable'
        '401':
          $ref: '#/components/responses/unauthorized'
        '500':
          $ref: '#/components/responses/internalServerError'
      deprecated: false
  /agents/{arn}/relationships:
    post:
      tags:
      - Agents
      summary: Get Status of a Relationship
      operationId: GetStatusofaRelationship
      security:
        - userRestricted:
          - read:check-relationship
      parameters:
      - $ref: '#/components/parameters/arnParameter'
      - $ref: '#/components/parameters/acceptHeader'
      - $ref: '#/components/parameters/contentTypeHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsInvitationsRequest'
            examples:
              example-ITSA:
                value:
                  $ref: './examples/post-agency-check-relationship-itsa-example.json'
              example-VAT:
                value:
                  $ref: './examples/post-agency-check-relationship-vat-example.json'
        required: true
      responses:
        '204':
          description: The agent is authorised to act for the client.
        '403':
          $ref: '#/components/responses/forbiddenGetRelationshipStatus'
        '404':
          $ref: "#/components/responses/notFoundRelationship"
        '400':
          $ref: '#/components/responses/badRequestGetRelationshipStatus'
        '406':
          $ref: '#/components/responses/notAcceptable'
        '401':
          $ref: '#/components/responses/unauthorized'
        '500':
          $ref: '#/components/responses/internalServerError'
      deprecated: false

tags:
- name: Agents
  description: ''
